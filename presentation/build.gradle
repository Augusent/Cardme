apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.firebase-crash'
apply plugin: 'com.google.firebase.firebase-perf'

apply from: "../buildsystem/script-git-version.gradle"

def globalConf = rootProject.ext

android {
    compileSdkVersion globalConf.compileSdkVersion
    buildToolsVersion globalConf.buildToolsVersion

    defaultConfig {
        applicationId "com.popalay.cardme"
        minSdkVersion globalConf.minSdkVersion
        targetSdkVersion globalConf.targetSdkVersion

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }

    signingConfigs {
        debug {
            storeFile file(globalConf.debugStoreFile)
        }

        release {
            storeFile file(globalConf.releaseStoreFile)
            keyAlias globalConf.keyAlias
            keyPassword globalConf.keyPassword
            storePassword globalConf.storePassword
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
        }

        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "ignored"

    productFlavors {

        all {
            buildConfigField "long", "DATABASE_VERSION", "3L"
        }

        dev {
            versionCode gitVersionCodeTime
            versionName gitVersionName
        }

        prod {
            versionCode gitVersionCode
            versionName gitVersionName
        }
    }

    dataBinding.enabled true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        incremental = false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':data')
    api project(":domain")

    implementation presentationDependencies.cardView
    implementation presentationDependencies.recyclerView
    implementation presentationDependencies.supportLib
    implementation presentationDependencies.supportDesign
    implementation presentationDependencies.customTabs
    implementation presentationDependencies.constraintLayout

    implementation presentationDependencies.recyclerViewPager
    implementation presentationDependencies.textDrawable

    implementation presentationDependencies.lastAdapter

    kapt presentationDependencies.databindingCompiler
    implementation presentationDependencies.rxDatabinding

    implementation presentationDependencies.archComponentsRuntime
    implementation presentationDependencies.archComponentsExtensions
    kapt presentationDependencies.archComponentsCompiler

    implementation presentationDependencies.router

    implementation presentationDependencies.dagger
    kapt presentationDependencies.daggerCompiler
    implementation presentationDependencies.daggerAndroidSupport
    kapt presentationDependencies.daggerAndroidProcessor

    implementation presentationDependencies.rxJava
    implementation presentationDependencies.rxAndroid
    implementation presentationDependencies.rxKotlin
    implementation presentationDependencies.rxRelay

    implementation presentationDependencies.cardIo

    implementation presentationDependencies.shortbread
    kapt presentationDependencies.shortbreadCompiler

    implementation presentationDependencies.firebaseCore
    implementation presentationDependencies.firebasePerf
    implementation presentationDependencies.firebaseCrash

    implementation developmentDependencies.stetho
    implementation developmentDependencies.stethoRealm
    implementation developmentDependencies.androidProguards
    debugImplementation developmentDependencies.leakCanary
    releaseImplementation developmentDependencies.leakCanaryNoOp
    testImplementation developmentDependencies.leakCanaryNoOp
}

apply plugin: 'com.google.gms.google-services'

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith("test")) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}